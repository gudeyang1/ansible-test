<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.hpe.itsma.suite</groupId>
    <artifactId>itom-{{.Name}}-deploy-controller</artifactId>
    <version>${build.version}</version>
    <name>itom-{{.Name}} deployer controller image</name>
    <description>Service deployer controller control the whole service deploy process</description>

    <profiles>
        <profile>
            <id>release</id>
            <properties>
                <default.tag>${build.version}</default.tag>
                <latest>latest</latest>
            </properties>
        </profile>
        <profile>
            <id>ci</id>
            <properties>
                <default.tag>${git.commit.id.abbrev}</default.tag>
                <latest>latest</latest>
            </properties>
        </profile>
        <profile>
            <id>dev</id>
            <properties>
                <default.tag>dev</default.tag>
                <latest>latest</latest>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>

    <properties>
        <build.version>latest</build.version>
        <docker.image.tag>${default.tag}</docker.image.tag>
        <http.proxy>http://web-proxy.rose.hpecorp.net:8080</http.proxy>
        <https.proxy>http://web-proxy.rose.hpecorp.net:8080</https.proxy>
        <docker.registry>shc-harbor-dev.hpeswlab.net/itsma</docker.registry>
        <docker.registry.api>https://shc-harbor-dev.hpeswlab.net/v2/</docker.registry.api>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <executions>
                    <execution>
                        <id>copy-controller</id>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.hpe.itsma.suite</groupId>
                                    <artifactId>service-deploy-controller</artifactId>
                                    <version>1.3-SNAPSHOT</version>
                                    <type>tar.gz</type>
                                </artifactItem>
                            </artifactItems>
                            <outputDirectory>${project.build.outputDirectory}/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>copy-basic-resources</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}</directory>
                                    <filtering>true</filtering>
                                    <include>Dockerfile</include>
                                </resource>
                                <resource>
                                    <directory>${project.basedir}</directory>
                                    <filtering>false</filtering>
                                    <include>start.sh</include>
                                    <include>service_property.json</include>
                                    <include>manifest.yaml</include>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-yaml-templates</id>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>tag.properties</filter>
                            </filters>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/yaml_templates</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>${project.build.outputDirectory}/yaml_templates</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.11</version>
                <configuration>
                    <imageName>${project.artifactId}</imageName>
                    <dockerDirectory>${project.build.outputDirectory}</dockerDirectory>
                    <serverId>harbor-dev</serverId>
                    <registryUrl>${docker.registry.api}</registryUrl>
                </configuration>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>tag-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <image>${project.artifactId}</image>
                            <newName>${docker.registry}/${project.artifactId}:${docker.image.tag}</newName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>tag-latest</id>
                        <phase>package</phase>
                        <goals>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <image>${project.artifactId}</image>
                            <newName>${docker.registry}/${project.artifactId}:${latest}</newName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deploy-image</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <imageName>${docker.registry}/${project.artifactId}:${docker.image.tag}</imageName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deploy-latest</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <imageName>${docker.registry}/${project.artifactId}:${latest}</imageName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
